{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weathertracker/src/components/location.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Using geolocation JavaScript API in React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weathertracker/src/components/location.jsx"],"names":["React","Component","Location","constructor","props","state","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,MAAT,CAAgBC,QAA7C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,MAAT,CAAgBE,SAA9C;AACH,KAHG;AAIP;;AACGC,EAAAA,MAAM,GAAG;AACT,wBACA;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAIG;;AAhByB;;AAmBhC,eAAed,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Location extends Component{\n    constructor(props){\n        super(props);\n        this.state={};\n    }\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n    });\n}\n    render() {\n    return (\n    <div>\n    <h4>Using geolocation JavaScript API in React</h4>\n    </div>\n    );}   \n}\n\nexport default Location"]},"metadata":{},"sourceType":"module"}