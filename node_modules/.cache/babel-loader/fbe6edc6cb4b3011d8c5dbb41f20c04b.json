{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weathertracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherM from \"./components/WeatherM\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [crntCity, setCrntCity] = useState(\"\");\n  navigator.geolocation.getCurrentPosition(position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  });\n  const API = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=9e4cdd6c628c4cbdcacc25b6df594009\";\n  useEffect(() => {\n    axios.get(API).then(response => setCrntCity(response.data.name));\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WeatherM, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"q//4zGe9XmvqbqULfHslpXizTYE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weathertracker/src/App.js"],"names":["React","useState","useEffect","WeatherM","axios","App","latitude","setLatitude","longitude","setLongitude","crntCity","setCrntCity","navigator","geolocation","getCurrentPosition","position","coords","API","get","then","response","data","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACO,SAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACS,QAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACAW,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAa;AAClDR,IAAAA,WAAW,CAACQ,QAAQ,CAACC,MAAT,CAAgBV,QAAjB,CAAX;AACAG,IAAAA,YAAY,CAACM,QAAQ,CAACC,MAAT,CAAgBR,SAAjB,CAAZ;AACH,GAHD;AAIA,QAAMS,GAAG,GAAG,yDAAwDX,QAAxD,GAAmE,OAAnE,GAA4EE,SAA5E,GAAsF,yCAAlG;AACAN,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACc,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,QAAD,IAAcT,WAAW,CAACS,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAA7C;AACH,GAFQ,EAEP,CAAChB,QAAD,EAAUE,SAAV,CAFO,CAAT;AAGA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GAjBQH,G;;KAAAA,G;AAmBT,eAAeA,GAAf","sourcesContent":["import React , {useState , useEffect }from \"react\";\nimport WeatherM from \"./components/WeatherM\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [latitude , setLatitude] = useState(\"\");\n  const [longitude , setLongitude] = useState(\"\");\n  const [crntCity , setCrntCity] = useState(\"\");\n  navigator.geolocation.getCurrentPosition((position) =>{\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n  })\n  const API = \"https://api.openweathermap.org/data/2.5/weather?lat=\"+ latitude + \"&lon=\"+ longitude+\"&appid=9e4cdd6c628c4cbdcacc25b6df594009\"\n  useEffect(()=>{\n      axios.get(API).then((response) => setCrntCity(response.data.name));\n  },[latitude,longitude])\n  return (\n    <>\n      <WeatherM/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}